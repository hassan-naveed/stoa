{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"BoaScan Docs","title":"Boascan Docs"},{"location":"index.html#boascan-docs","text":"","title":"BoaScan Docs"},{"location":"Database_Schema.html","text":"The database schema of Stoa 1. Table blocks Schema Column Data Type PK Not NULL Default Description height INTEGER Y Y The height of the block hash TINYBLOB Y The hash of the current block prev_block TINYBLOB Y The hash of the previous block validators TEXT Y Bitfield containing the validators' key indices which signed the block merkle_root TINYBLOB Y The hash of the merkle root of the transactions signature TINYBLOB Y Schnorr multisig of all validators which signed this block random_seed TINYBLOB Y Hash of random seed of the preimages for this height missing_validators TEXT N List of indices to the validator UTXO set which have not revealed the preimage tx_count INTEGER Y The number of transactions in the block enrollment_count INTEGER Y The number of enrollments in the block time_offset INTEGER Y Block seconds offset from Genesis Timestamp time_stamp INTEGER Y Block unix timestamp Create Script CREATE TABLE IF NOT EXISTS \"blocks\" ( \"height\" INTEGER NOT NULL, \"hash\" TINYBLOB NOT NULL, \"prev_block\" TINYBLOB NOT NULL, \"validators\" TEXT NOT NULL, \"merkle_root\" TINYBLOB NOT NULL, \"signature\" TINYBLOB NOT NULL, \"random_seed\" TINYBLOB NOT NULL, \"missing_validators\" TEXT NULL, \"tx_count\" INTEGER NOT NULL, \"enrollment_count\" INTEGER NOT NULL, \"time_offset\" INTEGER NOT NULL, \"time_stamp\" INTEGER NOT NULL, PRIMARY KEY(\"height\") ) 2. Table enrollments Schema Column Data Type PK Not NULL Default Description block_height INTEGER Y Y The height of the block enrollment_index INTEGER Y Y The index of enrollment in the block. utxo_key TINYBLOB Y K: UTXO hash, A hash of a frozen UTXO commitment TINYBLOB Y X: commitment, The nth image of random value cycle_length INTEGER Y n: the number of rounds a validator will participate in enroll_sig TINYBLOB Y S: A signature for the message H(K, X, n, R) and the key K, using R Create Script CREATE TABLE IF NOT EXISTS \"enrollments\" ( \"block_height\" INTEGER NOT NULL, \"enrollment_index\" INTEGER NOT NULL, \"utxo_key\" TINYBLOB NOT NULL, \"commitment\" TINYBLOB NOT NULL, \"cycle_length\" INTEGER NOT NULL, \"enroll_sig\" TINYBLOB NOT NULL, PRIMARY KEY(\"block_height\",\"enrollment_index\") ) 3. Table transactions Schema Column Data Type PK Not NULL Default Description block_height INTEGER Y Y The height of the block tx_index INTEGER Y Y The index of transaction in the block tx_hash TINYBLOB Y The hash of transaction type INTEGER Y The type of transaction unlock_height INTEGER Y Height of the block to be unlock lock_height INTEGER Y This transaction may only be included in a block with block_height >= lock_height tx_fee INTEGER Y The fee of this transaction payload_fee INTEGER Y The payload fee of this transaction tx_size INTEGER Y The size of this transaction inputs_count INTEGER Y The number of inputs in the transaction outputs_count INTEGER Y The number of outputs in the transaction payload_size INTEGER Y The size of data payload in the transaction Create Script CREATE TABLE IF NOT EXISTS \"transactions\" ( \"block_height\" INTEGER NOT NULL, \"tx_index\" INTEGER NOT NULL, \"tx_hash\" TINYBLOB NOT NULL, \"type\" INTEGER NOT NULL, \"unlock_height\" INTEGER NOT NULL, \"lock_height\" INTEGER NOT NULL, \"tx_fee\" INTEGER NOT NULL, \"payload_fee\" INTEGER NOT NULL, \"tx_size\" INTEGER NOT NULL, \"inputs_count\" INTEGER NOT NULL, \"outputs_count\" INTEGER NOT NULL, \"payload_size\" INTEGER NOT NULL, PRIMARY KEY(\"block_height\",\"tx_index\") ) 4. Table tx_inputs Schema Column Data Type PK Not NULL Default Description block_height INTEGER Y Y The height of the block tx_index INTEGER Y Y The index of this transaction in the block's transactions array in_index INTEGER Y Y The index of this input in the Transaction's inputs array tx_hash TINYBLOB Y The hash of transaction utxo TINYBLOB Y Y The hash of the UTXO to be spent unlock_bytes TINYBLOB Y The unlock script, which will be ran together with the matching Input's lock script in the execution engine unlock_age INTEGER Y Use for implementing relative time locks ### Create Script CREATE TABLE IF NOT EXISTS \"tx_inputs\" ( \"block_height\" INTEGER NOT NULL, \"tx_index\" INTEGER NOT NULL, \"in_index\" INTEGER NOT NULL, \"tx_hash\" TINYBLOB NOT NULL, \"utxo\" TINYBLOB NOT NULL, \"unlock_bytes\" TINYBLOB NOT NULL, \"unlock_age\" INTEGER NOT NULL, PRIMARY KEY(\"block_height\",\"tx_index\",\"in_index\",\"utxo(64)\") ) 5. Table tx_outputs Schema Column Data Type PK Not NULL Default Description block_height INTEGER Y Y The height of the block tx_index INTEGER Y Y The index of transaction in the block. output_index INTEGER Y Y The index of output in the outputs. tx_hash TINYBLOB Y The hash of transaction utxo_key BLOB Y The hash of the UTXO type INTEGER Y The type of transaction output amount NUMERIC Y The monetary value of this output, in 1/10^7 lock_type INTEGER Y (0: Key; 1: Hash of Key; 2: Script; 3: Hash of Script) lock_bytes TINYBLOB Y The bytes of lock address TEXT Y The public key, Valid only when lock type is 0. Other than that, it's a blank. Create Script CREATE TABLE IF NOT EXISTS \"tx_outputs\" ( \"block_height\" INTEGER NOT NULL, \"tx_index\" INTEGER NOT NULL, \"output_index\" INTEGER NOT NULL, \"tx_hash\" TINYBLOB NOT NULL, \"utxo_key\" TINYBLOB NOT NULL, \"type\" INTEGER NOT NULL, \"amount\" NUMERIC NOT NULL, \"lock_type\" INTEGER NOT NULL, \"lock_bytes\" TINYBLOB NOT NULL, \"address\" TEXT NOT NULL, PRIMARY KEY(\"block_height\",\"tx_index\",\"output_index\") ) 6. Table utxos Schema Column Data Type PK Not NULL Default Description utxo_key TINYBLOB Y Y The hash of the UTXO tx_hash TINYBLOB Y The hash of transaction type INTEGER Y The type of UTXO (0: Payment, 1: Freeze) If the type of transaction is Freeze and the refund output is less than 40,000 BOA, it is Payment . Others are the same as the transaction type. unlock_height INTEGER Y Height of the block to be unlock amount BIGINT(20) Y The monetary value of this output, in 1/10^7 lock_type INTEGER Y (0: Key; 1: Hash of Key; 2: Script; 3: Hash of Script) lock_bytes TINYBLOB Y The bytes of lock address TEXT Y The public key, Valid only when lock type is 0. Other than that, it's a blank. Create Script CREATE TABLE IF NOT EXISTS \"utxos\" ( \"utxo_key\" TINYBLOB NOT NULL, \"tx_hash\" TINYBLOB NOT NULL, \"type\" INTEGER NOT NULL, \"unlock_height\" INTEGER NOT NULL, \"amount\" BIGINT(20) NOT NULL, \"lock_type\" INTEGER NOT NULL, \"lock_bytes\" TINYBLOB NOT NULL, \"address\" TEXT NOT NULL, PRIMARY KEY(\"utxo_key(64)\") ) 7. Table validators Schema Column Data Type PK Not NULL Default Description enrolled_at INTEGER Y Y The height this validator enrolled at utxo_key TINYBLOB Y Y The hash of the UTXO address TEXT Y The public key that can redeem this UTXO stake BIGINT(20) Y The amount of the UTXO preimage_height INTEGER Y The height of the preimage preimage_hash TINYBLOB Y The hash of the preimage Create Script CREATE TABLE IF NOT EXISTS \"validators\" ( \"enrolled_at\" INTEGER NOT NULL, \"utxo_key\" TINYBLOB NOT NULL, \"address\" TEXT NOT NULL, \"stake\" BIGINT(20) NOT NULL, \"preimage_height\" INTEGER NOT NULL, \"preimage_hash\" TINYBLOB NOT NULL, PRIMARY KEY(\"enrolled_at\",\"utxo_key(64)\") ) 8. Table payloads Schema Column Data Type PK Not NULL Default Description tx_hash TINYBLOB Y Y The hash of transaction payload BLOB Y The transaction data payload Create Script CREATE TABLE IF NOT EXISTS \"payloads\" ( \"tx_hash\" TINYBLOB NOT NULL, \"payload\" BLOB NOT NULL, PRIMARY KEY(\"tx_hash(64)\") ) 9. Table merkle_trees Schema Column Data Type PK Not NULL Default Description block_height INTEGER Y Y The height of the block merkle_index INTEGER Y Y The index of merkleTree in the block merkle_hash TINYBLOB Y The merkle tree Create Script CREATE TABLE IF NOT EXISTS \"merkle_trees\" ( \"block_height\" INTEGER NOT NULL, \"merkle_index\" INTEGER NOT NULL, \"merkle_hash\" TINYBLOB NOT NULL, PRIMARY KEY(\"block_height\",\"merkle_index\") ) 10. Table information It can store information that is required for operation. The following data is recorded when the most recently recorded block height is 100. {\"key\": \"height\", \"value\": \"100\"} Schema Column Data Type PK Not NULL Default Description key TEXT Y Y The key value TEXT Y The value Create Script CREATE TABLE IF NOT EXISTS \"information\" ( \"key\" TEXT NOT NULL, \"value\" TEXT NOT NULL, PRIMARY KEY(\"key(64)\") ) 11. Table transaction_pool Schema Column Data Type PK Not NULL Default Description tx_hash TINYBLOB Y Y The hash of transaction type INTEGER Y The type of transaction payload BLOB Y The transaction data payload lock_height INTEGER Y This transaction may only be included in a block with block_height >= lock_height received_height INTEGER Y The height of the block on receipt time INTEGER Y Received time tx_fee INTEGER Y The fee of this transaction payload_fee INTEGER Y The payload fee of this transaction tx_size INTEGER Y The size of this transaction Create Script CREATE TABLE IF NOT EXISTS \"transaction_pool\" ( \"tx_hash\" TINYBLOB NOT NULL, \"type\" INTEGER NOT NULL, \"payload\" BLOB NOT NULL, \"lock_height\" INTEGER NOT NULL, \"received_height\" INTEGER NOT NULL, \"time\" INTEGER NOT NULL, \"tx_fee\" INTEGER NOT NULL, \"payload_fee\" INTEGER NOT NULL, \"tx_size\" INTEGER NOT NULL, PRIMARY KEY(\"tx_hash(64)\") ) 12. Table tx_input_pool Schema Column Data Type PK Not NULL Default Description tx_hash TINYBLOB Y Y The hash of transaction input_index INTEGER Y Y The index of input in the inputs utxo TINYBLOB Y The hash of the UTXO to be spent unlock_bytes TINYBLOB Y The unlock script, which will be ran together with the matching Input's lock script in the execution engine unlock_age INTEGER Y Use for implementing relative time locks Create Script CREATE TABLE IF NOT EXISTS \"tx_input_pool\" ( \"tx_hash\" TINYBLOB NOT NULL, \"input_index\" INTEGER NOT NULL, \"utxo\" TINYBLOB NOT NULL, \"unlock_bytes\" TINYBLOB NOT NULL, \"unlock_age\" INTEGER NOT NULL, PRIMARY KEY(\"tx_hash(64)\",\"input_index\") ) 13. Table tx_output_pool Schema Column Data Type PK Not NULL Default Description tx_hash TINYBLOB Y Y The hash of transaction output_index INTEGER Y Y The index of output in the outputs type INTEGER Y The type of transaction output amount BIGINT(20) Y The monetary value of this output, in 1/10^7 lock_type INTEGER Y (0: Key; 1: Hash of Key; 2: Script; 3: Hash of Script) lock_bytes TINYBLOB Y The bytes of lock address TEXT Y The public key that can redeem this output Create Script CREATE TABLE IF NOT EXISTS \"tx_output_pool\" ( \"tx_hash\" TINYBLOB NOT NULL, \"output_index\" INTEGER NOT NULL, \"type\" INTEGER NOT NULL, \"amount\" BIGINT(20) NOT NULL, \"lock_type\" INTEGER NOT NULL, \"lock_bytes\" TINYBLOB NOT NULL, \"address\" TEXT NOT NULL, PRIMARY KEY(\"tx_hash(64)\",\"output_index\") ) 14. Table blocks_stats Schema Column Data Type PK Not NULL Default Description block_height INTEGER Y Y The block height total_sent BIGINT(20) Y Total sent total_received BIGINT(20) Y Total received total_reward BIGINT(20) Y Total reward total_fee BIGINT(20) Y Total fee total_size BIGINT(20) Y Total block size Create Script Create TABLE IF NOT EXISTS \"blocks_stats\" ( \"block_height\" INTEGER NOT NULL, \"total_sent\" BIGINT(20) UNSIGNED NOT NULL, \"total_received\" BIGINT(20) UNSIGNED NOT NULL, \"total_reward\" BIGINT(20) UNSIGNED NOT NULL, \"total_fee\" BIGINT(20) NOT NULL, \"total_size\" BIGINT(20) UNSIGNED NOT NULL, PRIMARY KEY (\"block_height\") ); 15. Table marketcap Schema Column Data Type PK Not NULL Default Description last_updated_at INTEGER Y Y Time of last update price DECIMAL(14,6) Y Price of BOA in USD market_cap BIGINT(20) Y Market cap 24 hour amount vol_24h BIGINT(20) Y 24 hours Volume change_24h BIGINT(20) Market cap change for last 24 hours Create Script Create TABLE IF NOT EXISTS \"marketcap\" ( \"last_updated_at\" INTEGER NOT NULL, \"price\" DECIMAL(14,6) NOT NULL, \"market_cap\" BIGINT(20) UNSIGNED NOT NULL, \"vol_24h\" BIGINT(20) UNSIGNED NOT NULL, \"change_24h\" BIGINT(20), PRIMARY KEY (\"last_updated_at\") ); 16. Table tx_pool Schema Column Data Type PK Not NULL Default Description key TINYBLOB Y Y The hash of transaction val BLOB Y The transaction serialized to binary Create Script CREATE TABLE IF NOT EXISTS tx_pool ( `key` TINYBLOB NOT NULL, `val` BLOB NOT NULL, PRIMARY KEY (`key`(64)) ) 15. Table fees Schema Column Data Type PK Not NULL Default Description height TEXT Y Y Height of Block time_stamp INTEGER Y Block unix timestamp average_tx_fee BIGINT(20) Y Average Fee of All Fees total_tx_fee BIGINT(20) Y Total Fee of Transactions in Block total_payload_fee BIGINT(20) Y Total Payload Fee total_fee BIGINT(20) Y Total Fee Create Script CREATE TABLE IF NOT EXISTS \"fees\"( \"height\" INTEGER NOT NULL, \"time_stamp\" INTEGER NOT NULL, \"average_tx_fee\" BIGINT(20) NOT NULL, \"total_tx_fee\" BIGINT(20) NOT NULL, \"total_payload_fee\" BIGINT(20) NOT NULL, \"total_fee\" BIGINT(20) NOT NULL, PRIMARY KEY(height) );","title":"The database schema of Stoa"},{"location":"Database_Schema.html#the-database-schema-of-stoa","text":"","title":"The database schema of Stoa"},{"location":"Database_Schema.html#1-table-blocks","text":"","title":"1. Table blocks"},{"location":"Database_Schema.html#schema","text":"Column Data Type PK Not NULL Default Description height INTEGER Y Y The height of the block hash TINYBLOB Y The hash of the current block prev_block TINYBLOB Y The hash of the previous block validators TEXT Y Bitfield containing the validators' key indices which signed the block merkle_root TINYBLOB Y The hash of the merkle root of the transactions signature TINYBLOB Y Schnorr multisig of all validators which signed this block random_seed TINYBLOB Y Hash of random seed of the preimages for this height missing_validators TEXT N List of indices to the validator UTXO set which have not revealed the preimage tx_count INTEGER Y The number of transactions in the block enrollment_count INTEGER Y The number of enrollments in the block time_offset INTEGER Y Block seconds offset from Genesis Timestamp time_stamp INTEGER Y Block unix timestamp","title":"Schema"},{"location":"Database_Schema.html#create-script","text":"CREATE TABLE IF NOT EXISTS \"blocks\" ( \"height\" INTEGER NOT NULL, \"hash\" TINYBLOB NOT NULL, \"prev_block\" TINYBLOB NOT NULL, \"validators\" TEXT NOT NULL, \"merkle_root\" TINYBLOB NOT NULL, \"signature\" TINYBLOB NOT NULL, \"random_seed\" TINYBLOB NOT NULL, \"missing_validators\" TEXT NULL, \"tx_count\" INTEGER NOT NULL, \"enrollment_count\" INTEGER NOT NULL, \"time_offset\" INTEGER NOT NULL, \"time_stamp\" INTEGER NOT NULL, PRIMARY KEY(\"height\") )","title":"Create Script"},{"location":"Database_Schema.html#2-table-enrollments","text":"","title":"2. Table enrollments"},{"location":"Database_Schema.html#schema_1","text":"Column Data Type PK Not NULL Default Description block_height INTEGER Y Y The height of the block enrollment_index INTEGER Y Y The index of enrollment in the block. utxo_key TINYBLOB Y K: UTXO hash, A hash of a frozen UTXO commitment TINYBLOB Y X: commitment, The nth image of random value cycle_length INTEGER Y n: the number of rounds a validator will participate in enroll_sig TINYBLOB Y S: A signature for the message H(K, X, n, R) and the key K, using R","title":"Schema"},{"location":"Database_Schema.html#create-script_1","text":"CREATE TABLE IF NOT EXISTS \"enrollments\" ( \"block_height\" INTEGER NOT NULL, \"enrollment_index\" INTEGER NOT NULL, \"utxo_key\" TINYBLOB NOT NULL, \"commitment\" TINYBLOB NOT NULL, \"cycle_length\" INTEGER NOT NULL, \"enroll_sig\" TINYBLOB NOT NULL, PRIMARY KEY(\"block_height\",\"enrollment_index\") )","title":"Create Script"},{"location":"Database_Schema.html#3-table-transactions","text":"","title":"3. Table transactions"},{"location":"Database_Schema.html#schema_2","text":"Column Data Type PK Not NULL Default Description block_height INTEGER Y Y The height of the block tx_index INTEGER Y Y The index of transaction in the block tx_hash TINYBLOB Y The hash of transaction type INTEGER Y The type of transaction unlock_height INTEGER Y Height of the block to be unlock lock_height INTEGER Y This transaction may only be included in a block with block_height >= lock_height tx_fee INTEGER Y The fee of this transaction payload_fee INTEGER Y The payload fee of this transaction tx_size INTEGER Y The size of this transaction inputs_count INTEGER Y The number of inputs in the transaction outputs_count INTEGER Y The number of outputs in the transaction payload_size INTEGER Y The size of data payload in the transaction","title":"Schema"},{"location":"Database_Schema.html#create-script_2","text":"CREATE TABLE IF NOT EXISTS \"transactions\" ( \"block_height\" INTEGER NOT NULL, \"tx_index\" INTEGER NOT NULL, \"tx_hash\" TINYBLOB NOT NULL, \"type\" INTEGER NOT NULL, \"unlock_height\" INTEGER NOT NULL, \"lock_height\" INTEGER NOT NULL, \"tx_fee\" INTEGER NOT NULL, \"payload_fee\" INTEGER NOT NULL, \"tx_size\" INTEGER NOT NULL, \"inputs_count\" INTEGER NOT NULL, \"outputs_count\" INTEGER NOT NULL, \"payload_size\" INTEGER NOT NULL, PRIMARY KEY(\"block_height\",\"tx_index\") )","title":"Create Script"},{"location":"Database_Schema.html#4-table-tx_inputs","text":"","title":"4. Table tx_inputs"},{"location":"Database_Schema.html#schema_3","text":"Column Data Type PK Not NULL Default Description block_height INTEGER Y Y The height of the block tx_index INTEGER Y Y The index of this transaction in the block's transactions array in_index INTEGER Y Y The index of this input in the Transaction's inputs array tx_hash TINYBLOB Y The hash of transaction utxo TINYBLOB Y Y The hash of the UTXO to be spent unlock_bytes TINYBLOB Y The unlock script, which will be ran together with the matching Input's lock script in the execution engine unlock_age INTEGER Y Use for implementing relative time locks ### Create Script CREATE TABLE IF NOT EXISTS \"tx_inputs\" ( \"block_height\" INTEGER NOT NULL, \"tx_index\" INTEGER NOT NULL, \"in_index\" INTEGER NOT NULL, \"tx_hash\" TINYBLOB NOT NULL, \"utxo\" TINYBLOB NOT NULL, \"unlock_bytes\" TINYBLOB NOT NULL, \"unlock_age\" INTEGER NOT NULL, PRIMARY KEY(\"block_height\",\"tx_index\",\"in_index\",\"utxo(64)\") )","title":"Schema"},{"location":"Database_Schema.html#5-table-tx_outputs","text":"","title":"5. Table tx_outputs"},{"location":"Database_Schema.html#schema_4","text":"Column Data Type PK Not NULL Default Description block_height INTEGER Y Y The height of the block tx_index INTEGER Y Y The index of transaction in the block. output_index INTEGER Y Y The index of output in the outputs. tx_hash TINYBLOB Y The hash of transaction utxo_key BLOB Y The hash of the UTXO type INTEGER Y The type of transaction output amount NUMERIC Y The monetary value of this output, in 1/10^7 lock_type INTEGER Y (0: Key; 1: Hash of Key; 2: Script; 3: Hash of Script) lock_bytes TINYBLOB Y The bytes of lock address TEXT Y The public key, Valid only when lock type is 0. Other than that, it's a blank.","title":"Schema"},{"location":"Database_Schema.html#create-script_3","text":"CREATE TABLE IF NOT EXISTS \"tx_outputs\" ( \"block_height\" INTEGER NOT NULL, \"tx_index\" INTEGER NOT NULL, \"output_index\" INTEGER NOT NULL, \"tx_hash\" TINYBLOB NOT NULL, \"utxo_key\" TINYBLOB NOT NULL, \"type\" INTEGER NOT NULL, \"amount\" NUMERIC NOT NULL, \"lock_type\" INTEGER NOT NULL, \"lock_bytes\" TINYBLOB NOT NULL, \"address\" TEXT NOT NULL, PRIMARY KEY(\"block_height\",\"tx_index\",\"output_index\") )","title":"Create Script"},{"location":"Database_Schema.html#6-table-utxos","text":"","title":"6. Table utxos"},{"location":"Database_Schema.html#schema_5","text":"Column Data Type PK Not NULL Default Description utxo_key TINYBLOB Y Y The hash of the UTXO tx_hash TINYBLOB Y The hash of transaction type INTEGER Y The type of UTXO (0: Payment, 1: Freeze) If the type of transaction is Freeze and the refund output is less than 40,000 BOA, it is Payment . Others are the same as the transaction type. unlock_height INTEGER Y Height of the block to be unlock amount BIGINT(20) Y The monetary value of this output, in 1/10^7 lock_type INTEGER Y (0: Key; 1: Hash of Key; 2: Script; 3: Hash of Script) lock_bytes TINYBLOB Y The bytes of lock address TEXT Y The public key, Valid only when lock type is 0. Other than that, it's a blank.","title":"Schema"},{"location":"Database_Schema.html#create-script_4","text":"CREATE TABLE IF NOT EXISTS \"utxos\" ( \"utxo_key\" TINYBLOB NOT NULL, \"tx_hash\" TINYBLOB NOT NULL, \"type\" INTEGER NOT NULL, \"unlock_height\" INTEGER NOT NULL, \"amount\" BIGINT(20) NOT NULL, \"lock_type\" INTEGER NOT NULL, \"lock_bytes\" TINYBLOB NOT NULL, \"address\" TEXT NOT NULL, PRIMARY KEY(\"utxo_key(64)\") )","title":"Create Script"},{"location":"Database_Schema.html#7-table-validators","text":"","title":"7. Table validators"},{"location":"Database_Schema.html#schema_6","text":"Column Data Type PK Not NULL Default Description enrolled_at INTEGER Y Y The height this validator enrolled at utxo_key TINYBLOB Y Y The hash of the UTXO address TEXT Y The public key that can redeem this UTXO stake BIGINT(20) Y The amount of the UTXO preimage_height INTEGER Y The height of the preimage preimage_hash TINYBLOB Y The hash of the preimage","title":"Schema"},{"location":"Database_Schema.html#create-script_5","text":"CREATE TABLE IF NOT EXISTS \"validators\" ( \"enrolled_at\" INTEGER NOT NULL, \"utxo_key\" TINYBLOB NOT NULL, \"address\" TEXT NOT NULL, \"stake\" BIGINT(20) NOT NULL, \"preimage_height\" INTEGER NOT NULL, \"preimage_hash\" TINYBLOB NOT NULL, PRIMARY KEY(\"enrolled_at\",\"utxo_key(64)\") )","title":"Create Script"},{"location":"Database_Schema.html#8-table-payloads","text":"","title":"8. Table payloads"},{"location":"Database_Schema.html#schema_7","text":"Column Data Type PK Not NULL Default Description tx_hash TINYBLOB Y Y The hash of transaction payload BLOB Y The transaction data payload","title":"Schema"},{"location":"Database_Schema.html#create-script_6","text":"CREATE TABLE IF NOT EXISTS \"payloads\" ( \"tx_hash\" TINYBLOB NOT NULL, \"payload\" BLOB NOT NULL, PRIMARY KEY(\"tx_hash(64)\") )","title":"Create Script"},{"location":"Database_Schema.html#9-table-merkle_trees","text":"","title":"9. Table merkle_trees"},{"location":"Database_Schema.html#schema_8","text":"Column Data Type PK Not NULL Default Description block_height INTEGER Y Y The height of the block merkle_index INTEGER Y Y The index of merkleTree in the block merkle_hash TINYBLOB Y The merkle tree","title":"Schema"},{"location":"Database_Schema.html#create-script_7","text":"CREATE TABLE IF NOT EXISTS \"merkle_trees\" ( \"block_height\" INTEGER NOT NULL, \"merkle_index\" INTEGER NOT NULL, \"merkle_hash\" TINYBLOB NOT NULL, PRIMARY KEY(\"block_height\",\"merkle_index\") )","title":"Create Script"},{"location":"Database_Schema.html#10-table-information","text":"It can store information that is required for operation. The following data is recorded when the most recently recorded block height is 100. {\"key\": \"height\", \"value\": \"100\"}","title":"10. Table information"},{"location":"Database_Schema.html#schema_9","text":"Column Data Type PK Not NULL Default Description key TEXT Y Y The key value TEXT Y The value","title":"Schema"},{"location":"Database_Schema.html#create-script_8","text":"CREATE TABLE IF NOT EXISTS \"information\" ( \"key\" TEXT NOT NULL, \"value\" TEXT NOT NULL, PRIMARY KEY(\"key(64)\") )","title":"Create Script"},{"location":"Database_Schema.html#11-table-transaction_pool","text":"","title":"11. Table transaction_pool"},{"location":"Database_Schema.html#schema_10","text":"Column Data Type PK Not NULL Default Description tx_hash TINYBLOB Y Y The hash of transaction type INTEGER Y The type of transaction payload BLOB Y The transaction data payload lock_height INTEGER Y This transaction may only be included in a block with block_height >= lock_height received_height INTEGER Y The height of the block on receipt time INTEGER Y Received time tx_fee INTEGER Y The fee of this transaction payload_fee INTEGER Y The payload fee of this transaction tx_size INTEGER Y The size of this transaction","title":"Schema"},{"location":"Database_Schema.html#create-script_9","text":"CREATE TABLE IF NOT EXISTS \"transaction_pool\" ( \"tx_hash\" TINYBLOB NOT NULL, \"type\" INTEGER NOT NULL, \"payload\" BLOB NOT NULL, \"lock_height\" INTEGER NOT NULL, \"received_height\" INTEGER NOT NULL, \"time\" INTEGER NOT NULL, \"tx_fee\" INTEGER NOT NULL, \"payload_fee\" INTEGER NOT NULL, \"tx_size\" INTEGER NOT NULL, PRIMARY KEY(\"tx_hash(64)\") )","title":"Create Script"},{"location":"Database_Schema.html#12-table-tx_input_pool","text":"","title":"12. Table tx_input_pool"},{"location":"Database_Schema.html#schema_11","text":"Column Data Type PK Not NULL Default Description tx_hash TINYBLOB Y Y The hash of transaction input_index INTEGER Y Y The index of input in the inputs utxo TINYBLOB Y The hash of the UTXO to be spent unlock_bytes TINYBLOB Y The unlock script, which will be ran together with the matching Input's lock script in the execution engine unlock_age INTEGER Y Use for implementing relative time locks","title":"Schema"},{"location":"Database_Schema.html#create-script_10","text":"CREATE TABLE IF NOT EXISTS \"tx_input_pool\" ( \"tx_hash\" TINYBLOB NOT NULL, \"input_index\" INTEGER NOT NULL, \"utxo\" TINYBLOB NOT NULL, \"unlock_bytes\" TINYBLOB NOT NULL, \"unlock_age\" INTEGER NOT NULL, PRIMARY KEY(\"tx_hash(64)\",\"input_index\") )","title":"Create Script"},{"location":"Database_Schema.html#13-table-tx_output_pool","text":"","title":"13. Table tx_output_pool"},{"location":"Database_Schema.html#schema_12","text":"Column Data Type PK Not NULL Default Description tx_hash TINYBLOB Y Y The hash of transaction output_index INTEGER Y Y The index of output in the outputs type INTEGER Y The type of transaction output amount BIGINT(20) Y The monetary value of this output, in 1/10^7 lock_type INTEGER Y (0: Key; 1: Hash of Key; 2: Script; 3: Hash of Script) lock_bytes TINYBLOB Y The bytes of lock address TEXT Y The public key that can redeem this output","title":"Schema"},{"location":"Database_Schema.html#create-script_11","text":"CREATE TABLE IF NOT EXISTS \"tx_output_pool\" ( \"tx_hash\" TINYBLOB NOT NULL, \"output_index\" INTEGER NOT NULL, \"type\" INTEGER NOT NULL, \"amount\" BIGINT(20) NOT NULL, \"lock_type\" INTEGER NOT NULL, \"lock_bytes\" TINYBLOB NOT NULL, \"address\" TEXT NOT NULL, PRIMARY KEY(\"tx_hash(64)\",\"output_index\") )","title":"Create Script"},{"location":"Database_Schema.html#14-table-blocks_stats","text":"","title":"14. Table blocks_stats"},{"location":"Database_Schema.html#schema_13","text":"Column Data Type PK Not NULL Default Description block_height INTEGER Y Y The block height total_sent BIGINT(20) Y Total sent total_received BIGINT(20) Y Total received total_reward BIGINT(20) Y Total reward total_fee BIGINT(20) Y Total fee total_size BIGINT(20) Y Total block size","title":"Schema"},{"location":"Database_Schema.html#create-script_12","text":"Create TABLE IF NOT EXISTS \"blocks_stats\" ( \"block_height\" INTEGER NOT NULL, \"total_sent\" BIGINT(20) UNSIGNED NOT NULL, \"total_received\" BIGINT(20) UNSIGNED NOT NULL, \"total_reward\" BIGINT(20) UNSIGNED NOT NULL, \"total_fee\" BIGINT(20) NOT NULL, \"total_size\" BIGINT(20) UNSIGNED NOT NULL, PRIMARY KEY (\"block_height\") );","title":"Create Script"},{"location":"Database_Schema.html#15-table-marketcap","text":"","title":"15. Table marketcap"},{"location":"Database_Schema.html#schema_14","text":"Column Data Type PK Not NULL Default Description last_updated_at INTEGER Y Y Time of last update price DECIMAL(14,6) Y Price of BOA in USD market_cap BIGINT(20) Y Market cap 24 hour amount vol_24h BIGINT(20) Y 24 hours Volume change_24h BIGINT(20) Market cap change for last 24 hours","title":"Schema"},{"location":"Database_Schema.html#create-script_13","text":"Create TABLE IF NOT EXISTS \"marketcap\" ( \"last_updated_at\" INTEGER NOT NULL, \"price\" DECIMAL(14,6) NOT NULL, \"market_cap\" BIGINT(20) UNSIGNED NOT NULL, \"vol_24h\" BIGINT(20) UNSIGNED NOT NULL, \"change_24h\" BIGINT(20), PRIMARY KEY (\"last_updated_at\") );","title":"Create Script"},{"location":"Database_Schema.html#16-table-tx_pool","text":"","title":"16. Table tx_pool"},{"location":"Database_Schema.html#schema_15","text":"Column Data Type PK Not NULL Default Description key TINYBLOB Y Y The hash of transaction val BLOB Y The transaction serialized to binary","title":"Schema"},{"location":"Database_Schema.html#create-script_14","text":"CREATE TABLE IF NOT EXISTS tx_pool ( `key` TINYBLOB NOT NULL, `val` BLOB NOT NULL, PRIMARY KEY (`key`(64)) )","title":"Create Script"},{"location":"Database_Schema.html#15-table-fees","text":"","title":"15. Table fees"},{"location":"Database_Schema.html#schema_16","text":"Column Data Type PK Not NULL Default Description height TEXT Y Y Height of Block time_stamp INTEGER Y Block unix timestamp average_tx_fee BIGINT(20) Y Average Fee of All Fees total_tx_fee BIGINT(20) Y Total Fee of Transactions in Block total_payload_fee BIGINT(20) Y Total Payload Fee total_fee BIGINT(20) Y Total Fee","title":"Schema"},{"location":"Database_Schema.html#create-script_15","text":"CREATE TABLE IF NOT EXISTS \"fees\"( \"height\" INTEGER NOT NULL, \"time_stamp\" INTEGER NOT NULL, \"average_tx_fee\" BIGINT(20) NOT NULL, \"total_tx_fee\" BIGINT(20) NOT NULL, \"total_payload_fee\" BIGINT(20) NOT NULL, \"total_fee\" BIGINT(20) NOT NULL, PRIMARY KEY(height) );","title":"Create Script"},{"location":"blocksapi.html","text":"Welcome to BlocksAPI Page","title":"Welcome to BlocksAPI Page"},{"location":"blocksapi.html#welcome-to-blocksapi-page","text":"","title":"Welcome to BlocksAPI Page"},{"location":"getAddressSummary.html","text":"Endpoint https://boascan.io/getaddresssummary?address=GHSDNF\u2026 HTTP Method: GET Returns Address, No. of Transactions, Total Received, Total Sent, Freezing Total Amount, Reward Total Amount, Final Balance of Address Query String Explanation Example address public address GDNODE5JKEW8765DHGJASYD78ADG5YAJSD Example Response JSON: {\"response\":\"success\",\"data\":{\"height\":\"23423\", \"timestamp\":\"2s\", \"hash\":\"0x902349....\",\"merkleRoot\":\"0x093240...\",\"signature\":\"0x83493.....\",\"validators\":\"234\",\"txCount\":\"123\",\"enrolledCount\":\"322\"}}","title":"Get Address Summary - GET /getaddresssummary"},{"location":"getAddressSummary.html#endpoint","text":"https://boascan.io/getaddresssummary?address=GHSDNF\u2026 HTTP Method: GET Returns Address, No. of Transactions, Total Received, Total Sent, Freezing Total Amount, Reward Total Amount, Final Balance of Address Query String Explanation Example address public address GDNODE5JKEW8765DHGJASYD78ADG5YAJSD Example Response JSON: {\"response\":\"success\",\"data\":{\"height\":\"23423\", \"timestamp\":\"2s\", \"hash\":\"0x902349....\",\"merkleRoot\":\"0x093240...\",\"signature\":\"0x83493.....\",\"validators\":\"234\",\"txCount\":\"123\",\"enrolledCount\":\"322\"}}","title":"Endpoint"},{"location":"getBlockSummary.html","text":"Endpoint https://boascan.io/getblocksummary?block=0x0a8\u2026 HTTP Method: GET Returns Height, Hash, Previous Hash, Merkle Root, Signature, Random Seed, Timestamp, Block Size, Total Reward, Version, No. of Transactions, Transaction Volume, Total Fees, Total Received BOA, Total Sent BOA of block Query String Explanation Example block Block Hash or Block Height 0x0000009230428342374236748234322 or 327556 Example Response JSON: {\"response\":\"success\",\"data\":{\"height\":\"23423\", \"timestamp\":\"2s\", \"hash\":\"0x902349....\",\"merkleRoot\":\"0x093240...\",\"signature\":\"0x83493.....\",\"validators\":\"234\",\"txCount\":\"123\",\"enrolledCount\":\"322\"}}","title":"Get Block Summary - GET /getblocksummary"},{"location":"getBlockSummary.html#endpoint","text":"https://boascan.io/getblocksummary?block=0x0a8\u2026 HTTP Method: GET Returns Height, Hash, Previous Hash, Merkle Root, Signature, Random Seed, Timestamp, Block Size, Total Reward, Version, No. of Transactions, Transaction Volume, Total Fees, Total Received BOA, Total Sent BOA of block Query String Explanation Example block Block Hash or Block Height 0x0000009230428342374236748234322 or 327556 Example Response JSON: {\"response\":\"success\",\"data\":{\"height\":\"23423\", \"timestamp\":\"2s\", \"hash\":\"0x902349....\",\"merkleRoot\":\"0x093240...\",\"signature\":\"0x83493.....\",\"validators\":\"234\",\"txCount\":\"123\",\"enrolledCount\":\"322\"}}","title":"Endpoint"},{"location":"getBlocks.html","text":"Endpoint https://boascan.io/getmaxlatestblocks HTTP Method: GET Returns Height, Hash, Merkle Root, Signature, Validators. TX Count, Enrollment Count, Timestamp of Blocks Parameter Explanation Example address Get Balance 0f960607-0607-4382-aaca-6ebe086349f0 apikey Your API Key 0f960607-0607-4382-aaca-6ebe086349f0 Example Response JSON: {\"response\":\"success\",\"data\":{\"height\":\"23423\", \"timestamp\":\"2s\", \"hash\":\"0x902349....\",\"merkleRoot\":\"0x093240...\",\"signature\":\"0x83493.....\",\"validators\":\"234\",\"txCount\":\"123\",\"enrolledCount\":\"322\"}}","title":"Get Blocks - GET /getmaxlatestblocks"},{"location":"getTransactionSummary.html","text":"Endpoint https://boascan.io/gettransactionsummary?transaction=0x00a438... HTTP Method: GET Returns Hash, Input Address, Output Addresses, Time, Amount, Fee, Status, Type, Lock Height, Total Input, Total Output, Data Fees, Transaction Fees, Size, Payload, Inputs(Index, UTXO, Signature, Unlock Age, Bytes), Outputs(Index, UTXO, LockType, Bytes) of Transaction Query String Explanation Example transaction Transaction Hash 0x0a8219f7486cbfj78346y85734758323049dd92398 Example Request JSON: {\"response\":\"success\",\"data\":{\"height\":\"23423\", \"timestamp\":\"2s\", \"hash\":\"0x902349....\",\"merkleRoot\":\"0x093240...\",\"signature\":\"0x83493.....\",\"validators\":\"234\",\"txCount\":\"123\",\"enrolledCount\":\"322\"}} Example Response JSON: {\"response\":\"success\",\"data\":{\"height\":\"23423\", \"timestamp\":\"2s\", \"hash\":\"0x902349....\",\"merkleRoot\":\"0x093240...\",\"signature\":\"0x83493.....\",\"validators\":\"234\",\"txCount\":\"123\",\"enrolledCount\":\"322\"}}","title":"Get Transaction Summary - GET /getaddresssummary"},{"location":"getTransactionSummary.html#endpoint","text":"https://boascan.io/gettransactionsummary?transaction=0x00a438... HTTP Method: GET Returns Hash, Input Address, Output Addresses, Time, Amount, Fee, Status, Type, Lock Height, Total Input, Total Output, Data Fees, Transaction Fees, Size, Payload, Inputs(Index, UTXO, Signature, Unlock Age, Bytes), Outputs(Index, UTXO, LockType, Bytes) of Transaction Query String Explanation Example transaction Transaction Hash 0x0a8219f7486cbfj78346y85734758323049dd92398 Example Request JSON: {\"response\":\"success\",\"data\":{\"height\":\"23423\", \"timestamp\":\"2s\", \"hash\":\"0x902349....\",\"merkleRoot\":\"0x093240...\",\"signature\":\"0x83493.....\",\"validators\":\"234\",\"txCount\":\"123\",\"enrolledCount\":\"322\"}} Example Response JSON: {\"response\":\"success\",\"data\":{\"height\":\"23423\", \"timestamp\":\"2s\", \"hash\":\"0x902349....\",\"merkleRoot\":\"0x093240...\",\"signature\":\"0x83493.....\",\"validators\":\"234\",\"txCount\":\"123\",\"enrolledCount\":\"322\"}}","title":"Endpoint"},{"location":"getTransactions.html","text":"Endpoint https://boascan.io/getmaxlatesttransactions HTTP Method: GET Returns Block Height, Hash, Type, Amount, Fee, Size, Time of Transactions Query String Explanation Example - - - Example Response JSON: {\"response\":\"success\",\"data\":{\"height\":\"23423\", \"timestamp\":\"2s\", \"hash\":\"0x902349....\",\"merkleRoot\":\"0x093240...\",\"signature\":\"0x83493.....\",\"validators\":\"234\",\"txCount\":\"123\",\"enrolledCount\":\"322\"}}","title":"Get Transactions - GET /getmaxlatesttransactions"},{"location":"getTransactions.html#endpoint","text":"https://boascan.io/getmaxlatesttransactions HTTP Method: GET Returns Block Height, Hash, Type, Amount, Fee, Size, Time of Transactions Query String Explanation Example - - - Example Response JSON: {\"response\":\"success\",\"data\":{\"height\":\"23423\", \"timestamp\":\"2s\", \"hash\":\"0x902349....\",\"merkleRoot\":\"0x093240...\",\"signature\":\"0x83493.....\",\"validators\":\"234\",\"txCount\":\"123\",\"enrolledCount\":\"322\"}}","title":"Endpoint"}]}